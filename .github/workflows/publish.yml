name: Publish Plugin

on:
  push:
    tags:
      - 'v*'  # Trigger on version tag pushes (e.g., v1.0.0)

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Verify version matches tag
        run: |
          PKG_VERSION=$(node -p "require('./package.json').version")
          TAG_VERSION="${GITHUB_REF_NAME#v}"
          echo "package.json version: $PKG_VERSION"
          echo "tag version:        $TAG_VERSION" 
          if [ "$PKG_VERSION" != "$TAG_VERSION" ]; then
            echo "❌ Version mismatch: package.json=$PKG_VERSION tag=$TAG_VERSION" >&2
            exit 1
          fi
          echo "✅ Version check passed"

      # Build the plugin
      - name: Install & Build
        run: |
          npm ci
          npm run build
          ls -lah dist || true

      # Create a GitHub release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      # Create a zip file excluding development files
      - name: Create Release Zip
        run: |
          RELEASE_NAME="logseq-plugin-${GITHUB_REF_NAME}.zip"
          mkdir -p release
          cp -R dist release/dist
          cp package.json README.md LICENSE icon.png release/ 2>/dev/null || true
          (cd release && zip -r "../$RELEASE_NAME" .)
          ls -lh $RELEASE_NAME

      # Upload the plugin asset
      - name: Upload Plugin Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./logseq-plugin-${{ github.ref_name }}.zip
          asset_name: logseq-plugin-${{ github.ref_name }}.zip
          asset_content_type: application/zip